apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildToolVersion

    defaultConfig {
        applicationId "com.twins.mymoviedatabase.catalog"
        minSdkVersion minSdk
        targetSdkVersion compileSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

/*androidExtensions {
    experimental = true
}*/

kapt {
    generateStubs = true
    mapDiagnosticLocations = true
}


dependencies {
    implementation project(':ui')

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test:rules:$ruleVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    androidTestImplementation "com.linkedin.testbutler:test-butler-library:$testButlerVersion"
    testImplementation 'org.mockito:mockito-core:2.12.0' // unit test
    androidTestImplementation 'org.mockito:mockito-android:2.12.0' // Android test

    // dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // dagger-android
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation("com.google.dagger:dagger-android-support:$daggerVersion") {
        exclude group: 'com.android.support'
    }
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // livedata & viewmodel
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycleVersion"
}
